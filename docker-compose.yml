
services:
  db:
    container_name: db
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: redis:latest
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  django:
    container_name: django
    build: ./apps/django-server
    restart: always
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - MEDIA_ROOT=/media
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - static_volume:/static
      - media_volume:/app/media
      - ./apps/django-server:/app

  mailer:
    container_name: mailer-service
    build: 
      context: ./apps/mailer
      dockerfile: Dockerfile
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
      django:
        condition: service_started

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - django
    volumes:
      - static_volume:/static
      - media_volume:/media

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    environment:
      ADMINER_DEFAULT_SERVER: db

volumes:
  db-data:
  static_volume:
  media_volume:
